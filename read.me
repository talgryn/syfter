install kafak (https://strimzi.io/quickstarts/)
install mongodb
    kubectl config set-context $(kubectl config current-context) --namespace=<metadata.namespace>
build and push images:
syfter:
    docker build -t talg70/node-front .
    docker push talg70/node-front
    helm install syfter -n kafka --generate-name
syfter-gql
    docker build -t talg70/syfter-gql 
    docker push talg70/syfter-gql 
    helm install syfter-gql -n kafka --generate-name


mongodb:

helm install mongodb1 bitnami/mongodb -n kafka
NAME: mongodb1
LAST DEPLOYED: Sun Sep  4 14:30:33 2022
NAMESPACE: kafka
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
CHART NAME: mongodb
CHART VERSION: 13.1.2
APP VERSION: 6.0.1

** Please be patient while the chart is being deployed **

MongoDB&reg; can be accessed on the following DNS name(s) and ports from within your cluster:

    mongodb1.kafka.svc.cluster.local

To get the root password run:

    export MONGODB_ROOT_PASSWORD=$(kubectl get secret --namespace kafka mongodb1 -o jsonpath="{.data.mongodb-root-password}" | base64 -d)

To connect to your database, create a MongoDB&reg; client container:

    kubectl run --namespace kafka mongodb1-client --rm --tty -i --restart='Never' --env="MONGODB_ROOT_PASSWORD=$MONGODB_ROOT_PASSWORD" --image docker.io/bitnami/mongodb:6.0.1-debian-11-r1 --command -- bash

Then, run the following command:
    mongosh admin --host "mongodb1" --authenticationDatabase admin -u root -p $MONGODB_ROOT_PASSWORD

To connect to your database from outside the cluster execute the following commands:

    kubectl port-forward --namespace kafka svc/mongodb1 27017:27017 &
    mongosh --host 127.0.0.1 --authenticationDatabase admin -p $MONGODB_ROOT_PASSWORD



    taltal4321